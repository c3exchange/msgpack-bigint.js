{"version":3,"file":"msgpack.min.js","mappings":"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","sources":["webpack://MsgPack/webpack/universalModuleDefinition","webpack://MsgPack/./node_modules/base64-js/index.js","webpack://MsgPack/./node_modules/buffer/index.js","webpack://MsgPack/./node_modules/ieee754/index.js","webpack://MsgPack/./src/codec/decoder.ts","webpack://MsgPack/./src/codec/encoder.ts","webpack://MsgPack/./src/ext/bigint.ts","webpack://MsgPack/./src/ext/index.ts","webpack://MsgPack/./src/ext/timestamp.ts","webpack://MsgPack/./src/index.ts","webpack://MsgPack/webpack/bootstrap","webpack://MsgPack/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MsgPack\"] = factory();\n\telse\n\t\troot[\"MsgPack\"] = factory();\n})(this, () => {\nreturn ","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","import { Buffer } from 'node:buffer';\nimport { MsgPackExtension, MsgPackBigIntExtension, MsgPackDateExtension } from '../ext';\nimport * as ieee754 from 'ieee754';\nimport { IReaderFunction, ITokenDecoder } from './internal/types';\n\n// -----------------------------------------------------------------------------\n\n/**\n * MsgPack decoder configuration options.\n * @interface MsgPackDecoderOptions\n */\nexport interface MsgPackDecoderOptions {\n\t/**\n\t * A set of msgpack extensions.\n\t * @type {MsgPackExtension[]}\n\t */\n\textensions: MsgPackExtension[];\n\n\t/**\n\t * Allows decoding multiple values in the same buffer.\n\t * @type {boolean}\n\t * @default false\n\t */\n\tallowMultiple: boolean;\n\n\t/**\n\t * Throws an error is the stream contains multiple but malformed values.\n\t * If false, only fully decoded objects are returned and errors are\n\t * ignored.\n\t * @type {boolean}\n\t * @default true\n\t */\n\tmultipleCanThrowError: boolean;\n};\n\n/**\n * Implements a MsgPack decoder.\n * @class MsgPackDecoder\n */\nexport class MsgPackDecoder {\n\tprivate buffer: Uint8Array;\n\tprivate ofs = 0;\n\tprivate len: number;\n\tprivate tokenMap: ITokenDecoder[] = [];\n\n\t/**\n\t * Decodes a byte array data into a value using MsgPack codec.\n\t * @method decode\n\t * @param {Buffer | Uint8Array} buffer - The encoded data buffer.\n\t * @param {MsgPackDecoderOptions} opts - Decoder configuration settings.\n\t * @returns {T} - The decoded value.\n\t */\n\tpublic static decode<T = any>(buffer: Buffer | Uint8Array, opts?: Partial<MsgPackDecoderOptions>): T | T[] {\n\t\topts = Object.assign({}, {\n\t\t\textensions: [\n\t\t\t\tnew MsgPackBigIntExtension(1),\n\t\t\t\tnew MsgPackDateExtension()\n\t\t\t],\n\t\t\tallowMultiple: false,\n\t\t\tmultipleCanThrowError: true\n\t\t}, opts);\n\n\t\tconst d = new MsgPackDecoder(buffer, opts.extensions || []);\n\t\tif (!opts.allowMultiple) {\n\t\t\treturn d.process();\n\t\t}\n\n\t\tconst result: T[] = [];\n\t\ttry {\n\t\t\tfor (;;) {\n\t\t\t\tconst o = d.process();\n\t\t\t\tif (typeof o === 'undefined') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tresult.push(o);\n\t\t\t}\n\t\t}\n\t\tcatch (err: any) {\n\t\t\tif (typeof opts.multipleCanThrowError === 'boolean' && opts.multipleCanThrowError) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\n\tprivate constructor(buffer: Buffer | Uint8Array, private extensions: MsgPackExtension[]) {\n\t\tif (buffer instanceof Uint8Array) {\n\t\t\tthis.buffer = buffer;\n\t\t}\n\t\telse if (Buffer.isBuffer(buffer)) {\n\t\t\tthis.buffer = new Uint8Array(buffer);\n\t\t}\n\t\telse {\n\t\t\tthrow new Error('MsgPackDecoder: invalid data');\n\t\t}\n\t\tthis.ofs = 0;\n\t\tthis.len = buffer.length;\n\n\t\tthis.tokenMap.push({ fn: this.constantNull.bind(this), param: 0 }); //0xC0\n\t\tthis.tokenMap.push({ fn: this.invalidOpcode.bind(this), param: 0 }); //0xC1\n\t\tthis.tokenMap.push({ fn: this.constantFalse.bind(this), param: 0 }); //0xC2\n\t\tthis.tokenMap.push({ fn: this.constantTrue.bind(this), param: 0 }); //0xC3\n\n\t\tthis.tokenMap.push({ fn: this.readBinary.bind(this), param: this.readUint8.bind(this) }); //0xC4\n\t\tthis.tokenMap.push({ fn: this.readBinary.bind(this), param: this.readUint16.bind(this) }); //0xC5\n\t\tthis.tokenMap.push({ fn: this.readBinary.bind(this), param: this.readUint32.bind(this) }); //0xC6\n\n\t\tthis.tokenMap.push({ fn: this.readExtension.bind(this), param: this.readUint8.bind(this) }); //0xC7\n\t\tthis.tokenMap.push({ fn: this.readExtension.bind(this), param: this.readUint16.bind(this) }); //0xC8\n\t\tthis.tokenMap.push({ fn: this.readExtension.bind(this), param: this.readUint32.bind(this) }); //0xC9\n\n\t\tthis.tokenMap.push({ fn: this.readFloat.bind(this), param: 0 }); //0xCA\n\t\tthis.tokenMap.push({ fn: this.readDouble.bind(this), param: 0 }); //0xCB\n\n\t\tthis.tokenMap.push({ fn: this.readUint8.bind(this), param: 0 }); //0xCC\n\t\tthis.tokenMap.push({ fn: this.readUint16.bind(this), param: 0 }); //0xCD\n\t\tthis.tokenMap.push({ fn: this.readUint32.bind(this), param: 0 }); //0xCE\n\t\tthis.tokenMap.push({ fn: this.readUint64.bind(this), param: 0 }); //0xCF\n\n\t\tthis.tokenMap.push({ fn: this.readInt8.bind(this), param: 0 }); //0xD0\n\t\tthis.tokenMap.push({ fn: this.readInt16.bind(this), param: 0 }); //0xD1\n\t\tthis.tokenMap.push({ fn: this.readInt32.bind(this), param: 0 }); //0xD2\n\t\tthis.tokenMap.push({ fn: this.readInt64.bind(this), param: 0 }); //0xD3\n\n\t\tthis.tokenMap.push({ fn: this.readExtension.bind(this), param: 1 }); //0xD4\n\t\tthis.tokenMap.push({ fn: this.readExtension.bind(this), param: 2 }); //0xD5\n\t\tthis.tokenMap.push({ fn: this.readExtension.bind(this), param: 4 }); //0xD6\n\t\tthis.tokenMap.push({ fn: this.readExtension.bind(this), param: 8 }); //0xD7\n\t\tthis.tokenMap.push({ fn: this.readExtension.bind(this), param: 16 }); //0xD8\n\n\t\tthis.tokenMap.push({ fn: this.readString.bind(this), param: this.readUint8.bind(this) }); //0xD9\n\t\tthis.tokenMap.push({ fn: this.readString.bind(this), param: this.readUint16.bind(this) }); //0xDA\n\t\tthis.tokenMap.push({ fn: this.readString.bind(this), param: this.readUint32.bind(this) }); //0xDB\n\n\t\tthis.tokenMap.push({ fn: this.readArray.bind(this), param: this.readUint16.bind(this) }); //0xDC\n\t\tthis.tokenMap.push({ fn: this.readArray.bind(this), param: this.readUint32.bind(this) }); //0xDD\n\n\t\tthis.tokenMap.push({ fn: this.readMap.bind(this), param: this.readUint16.bind(this) }); //0xDE\n\t\tthis.tokenMap.push({ fn: this.readMap.bind(this), param: this.readUint32.bind(this) }); //0xDF\n\t}\n\n\tprivate process(): any {\n\t\tif (this.ofs >= this.len) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst opcode = this.readUint8();\n\t\tif (opcode < 0x80) {\n\t\t\treturn opcode; //positive constant\n\t\t}\n\t\tif (opcode >= 0xE0) {\n\t\t\treturn opcode - 0x100; //negative constant\n\t\t}\n\t\tif (opcode < 0x90) {\n\t\t\treturn this.readMap(opcode - 0x80);\n\t\t}\n\t\tif (opcode < 0xA0) {\n\t\t\treturn this.readArray(opcode - 0x90);\n\t\t}\n\t\tif (opcode < 0xC0) {\n\t\t\treturn this.readString(opcode - 0xA0);\n\t\t}\n\n\t\treturn this.tokenMap[opcode - 0xC0].fn(this.tokenMap[opcode - 0xC0].param);\n\t}\n\n\tprivate readUint8(/*param: number | IReaderFunction*/): number {\n\t\tthis.checkAvailable(1);\n\t\tconst n = this.buffer[this.ofs];\n\t\tthis.ofs += 1;\n\t\treturn n;\n\t}\n\n\tprivate readInt8(/*param: number | IReaderFunction*/): number {\n\t\tthis.checkAvailable(1);\n\t\tconst n = this.buffer[this.ofs];\n\t\tthis.ofs += 1;\n\t\treturn (n & 0x80) ? (n - 256) : n;\n\t}\n\n\tprivate readUint16(/*param: number | IReaderFunction*/): number {\n\t\tthis.checkAvailable(2);\n\t\tlet n = this.buffer[this.ofs] << 8;\n\t\tn |= this.buffer[this.ofs + 1];\n\t\tthis.ofs += 2;\n\t\treturn n;\n\t}\n\n\tprivate readInt16(/*param: number | IReaderFunction*/): number {\n\t\tthis.checkAvailable(2);\n\t\tconst n = this.buffer[this.ofs];\n\t\tthis.ofs += 2;\n\t\treturn (n & 0x8000) ? (n - 65536) : n;\n\t}\n\n\tprivate readUint32(/*param: number | IReaderFunction*/): number {\n\t\tthis.checkAvailable(4);\n\t\tlet n = this.buffer[this.ofs + 1] << 16;\n\t\tn |= this.buffer[this.ofs + 2] << 8;\n\t\tn |= this.buffer[this.ofs + 3];\n\t\tn += this.buffer[this.ofs] * 16777216; //the high byte at the end because OR operator uses 32-bit signed values\n\t\tthis.ofs += 4;\n\t\treturn n;\n\t}\n\n\tprivate readInt32(/*param: number | IReaderFunction*/): number {\n\t\tthis.checkAvailable(4);\n\t\tlet n = this.buffer[this.ofs + 1] << 16;\n\t\tn |= this.buffer[this.ofs + 2] << 8;\n\t\tn |= this.buffer[this.ofs + 3];\n\t\tn |= this.buffer[this.ofs] << 24;\n\t\tthis.ofs += 4;\n\t\treturn n;\n\t}\n\n\tprivate readUint64(/*param: number | IReaderFunction*/): number {\n\t\tconst hi = this.readUint32();\n\t\tconst lo = this.readUint32();\n\t\treturn (hi * 0x1_0000_0000) + lo;\n\t}\n\n\tprivate readInt64(/*param: number | IReaderFunction*/): number {\n\t\tconst hi = this.readUint32();\n\t\tconst lo = this.readUint32();\n\t\treturn (hi * 0x1_0000_0000) + lo;\n\t}\n\n\tprivate readFloat(/*param: number | IReaderFunction*/): any {\n\t\tthis.checkAvailable(4);\n\t\tconst n = ieee754.read(this.buffer, this.ofs, false, 23, 4);\n\t\tthis.ofs += 8;\n\t\treturn n;\n\t}\n\n\tprivate readDouble(/*param: number | IReaderFunction*/): any {\n\t\tthis.checkAvailable(8);\n\t\tconst n = ieee754.read(this.buffer, this.ofs, false, 52, 8);\n\t\tthis.ofs += 8;\n\t\treturn n;\n\t}\n\n\tprivate constantNull(/*param: number | IReaderFunction*/): any {\n\t\treturn null;\n\t}\n\n\tprivate constantFalse(/*param: number | IReaderFunction*/): any {\n\t\treturn false;\n\t}\n\n\tprivate constantTrue(/*param: number | IReaderFunction*/): any {\n\t\treturn true;\n\t}\n\n\tprivate readBinary(param: number | IReaderFunction): any {\n\t\tif (typeof param === 'function') {\n\t\t\tparam = param(0) as number;\n\t\t}\n\n\t\tif (!param) {\n\t\t\treturn new Uint8Array();\n\t\t}\n\t\tthis.checkAvailable(param);\n\n\t\tconst value = this.buffer.slice(this.ofs, this.ofs + param);\n\n\t\tthis.ofs += param;\n\n\t\treturn value;\n\t}\n\n\tprivate readExtension(param: number | IReaderFunction): any {\n\t\tif (typeof param === 'function') {\n\t\t\tparam = param(0) as number;\n\t\t}\n\n\t\tconst type = this.readInt8();\n\t\tif (param) {\n\t\t\tthis.checkAvailable(param);\n\t\t}\n\n\t\tfor (const extension of this.extensions) {\n\t\t\tif (extension.type == type) {\n\t\t\t\tconst start = this.ofs;\n\t\t\t\tthis.ofs += param;\n\t\t\t\treturn extension.decode(this.buffer.subarray(start, start + param));\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error('MsgPackDecoder: unsupported extension of type \"' + type.toString() + '\"');\n\t}\n\n\tprivate readString(param: number | IReaderFunction): any {\n\t\tif (typeof param === 'function') {\n\t\t\tparam = param(0) as number;\n\t\t}\n\n\t\tif (!param) {\n\t\t\treturn '';\n\t\t}\n\t\tthis.checkAvailable(param);\n\n\t\tlet invalidUtf8 = false;\n\t\tconst savedOffset = this.ofs;\n\t\tconst savedParam = param;\n\n\t\tlet str = [];\n\n\t\twhile (param > 0) {\n\t\t\tlet ch = this.buffer[this.ofs];\n\t\t\tthis.ofs += 1;\n\t\t\tparam -= 1;\n\n\t\t\tif (ch < 128) {\n\t\t\t\tstr.push(String.fromCharCode(ch));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ((ch & 0xE0) === 0xC0) {\n\t\t\t\tif (param < 1) { //invalid character found\n\t\t\t\t\tinvalidUtf8 = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tch = ((ch & 0x1F) << 6) | (this.buffer[this.ofs] & 0x3F);\n\t\t\t\tthis.ofs += 1;\n\t\t\t\tparam -= 1;\n\t\t\t}\n\t\t\telse if ((ch & 0xF0) === 0xE0) {\n\t\t\t\tif (param < 2) { //invalid character found\n\t\t\t\t\tinvalidUtf8 = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tch = ((ch & 0x0F) << 12) | ((this.buffer[this.ofs] & 0x3F) << 6) | (this.buffer[this.ofs + 1] & 0x3F);\n\t\t\t\tthis.ofs += 2;\n\t\t\t\tparam -= 2;\n\t\t\t}\n\t\t\telse if ((ch & 0xF8) === 0xF0) {\n\t\t\t\tif (param < 3) { //invalid character found\n\t\t\t\t\tinvalidUtf8 = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tch = ((ch & 0x0F) << 18) | ((this.buffer[this.ofs] & 0x3F) << 12) | ((this.buffer[this.ofs + 1] & 0x3F) << 6) |\n\t\t\t\t\t(this.buffer[this.ofs + 2] & 0x3F);\n\t\t\t\tthis.ofs += 3;\n\t\t\t\tparam -= 3;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//invalid character found\n\t\t\t\tinvalidUtf8 = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (ch >= 0x010000) {\n\t\t\t\tch -= 0x010000;\n\t\t\t\tstr.push(String.fromCharCode((ch >>> 10) + 0xD800, (ch & 0x3FF) + 0xDC00));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstr.push(String.fromCharCode(ch));\n\t\t\t}\n\t\t}\n\n\t\t//code will enter inside this loop if we found an invalid UTF-8 character to decode in the previous one\n\t\tif (invalidUtf8) {\n\t\t\tstr = [];\n\t\t\tthis.ofs = savedOffset;\n\t\t\tfor (param = savedParam; param > 0; param -= 1) {\n\t\t\t\tstr.push(String.fromCharCode(this.buffer[this.ofs]));\n\t\t\t\tthis.ofs += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn str.join('');\n\t}\n\n\tprivate readMap(param: number | IReaderFunction): any {\n\t\tif (typeof param === 'function') {\n\t\t\tparam = param(0) as number;\n\t\t}\n\n\t\tconst value:Record<any, any> = {};\n\n\t\tfor (let idx = 0; idx < param; idx++) {\n\t\t\tconst key = this.process();\n\t\t\tvalue[key] = this.process();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tprivate readArray(param: number | IReaderFunction): any {\n\t\tif (typeof param === 'function') {\n\t\t\tparam = param(0) as number;\n\t\t}\n\n\t\tconst value = new Array(param as number);\n\n\t\tfor (let idx = 0; idx < param; idx++) {\n\t\t\tvalue[idx] = this.process();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tprivate checkAvailable(count: number): void {\n\t\tif (this.len - this.ofs < count) {\n\t\t\tthrow new Error('MsgPackDecoder: end of stream reached');\n\t\t}\n\t}\n\n\tprivate invalidOpcode(/*param: number | IReaderFunction*/): any {\n\t\tthrow new Error('MsgPackDecoder: invalid opcode');\n\t}\n}\n","import { MsgPackExtension, MsgPackBigIntExtension, MsgPackDateExtension } from '../ext';\n\n// -----------------------------------------------------------------------------\n\n/**\n * MsgPack encoder configuration options.\n * @interface MsgPackEncoderOptions\n */\nexport interface MsgPackEncoderOptions {\n\t/**\n\t * A set of msgpack extensions.\n\t * @type {MsgPackExtension[]}\n\t */\n\textensions: MsgPackExtension[];\n\n\t/**\n\t * Sorts keys before encoding an object.\n\t * @type {boolean}\n\t * @default true\n\t */\n\tsortKeys: boolean;\n\n\t/**\n\t * If a number is not a safe integer, store it as a single-precision floating-point\n\t * value instead of double-precision.\n\t * @type {boolean}\n\t * @default false\n\t */\n\tuseFloat: boolean;\n};\n\n/**\n * Implements a MsgPack encoder.\n * @class MsgPackEncoder\n */\nexport class MsgPackEncoder {\n\tprivate bufferView = new DataView(new ArrayBuffer(2048));\n\tprivate buffer = new Uint8Array(this.bufferView.buffer);\n\tprivate bufferLen = 0;\n\n\t/**\n\t * Encodes a value into on array of bytes using MsgPack codec.\n\t * @method encode\n\t * @param {any} value - The value to encode.\n\t * @param {MsgPackEncoderOptions} opts - Encoder configuration settings.\n\t * @returns {Uint8Array} - The encoded data as a byte array.\n\t */\n\tpublic static encode<T = any>(value: T, opts?: Partial<MsgPackEncoderOptions>): Uint8Array {\n\t\topts = Object.assign({}, {\n\t\t\textensions: [\n\t\t\t\tnew MsgPackBigIntExtension(1),\n\t\t\t\tnew MsgPackDateExtension()\n\t\t\t],\n\t\t\tsortKeys: true,\n\t\t\tuseFloat: false\n\t\t}, opts);\n\n\t\tconst e = new MsgPackEncoder(value, opts.extensions || [], opts.sortKeys as boolean, opts.useFloat as boolean);\n\t\treturn e.process();\n\t};\n\n\tprivate constructor(private value: any, private extensions: MsgPackExtension[], private sortKeys: boolean, private useFloat: boolean) {\n\t}\n\n\tprivate process(): Uint8Array {\n\t\tthis.parse(this.value);\n\t\treturn new Uint8Array(this.buffer.buffer, 0, this.bufferLen);\n\t}\n\n\tprivate parse(obj: any): void {\n\t\tif (obj === null) {\n\t\t\tthis.encodeNull();\n\t\t\treturn;\n\t\t}\n\t\tif (typeof obj === 'boolean') {\n\t\t\tthis.encodeBoolean(obj);\n\t\t\treturn;\n\t\t}\n\t\tif (typeof obj === 'number') {\n\t\t\tthis.encodeNumber(obj);\n\t\t\treturn;\n\t\t}\n\t\tif (typeof obj === 'string') {\n\t\t\tthis.encodeString(obj);\n\t\t\treturn;\n\t\t}\n\t\tfor (const extension of this.extensions) {\n\t\t\tif (extension.is(obj)) {\n\t\t\t\tconst data = extension.encode(obj);\n\t\t\t\tthis.encodeExtension(extension.type, data);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (Array.isArray(obj)) {\n\t\t\tthis.encodeArray(obj);\n\t\t\treturn;\n\t\t}\n\t\tif (ArrayBuffer.isView(obj)) {\n\t\t\tthis.encodeBinary(obj);\n\t\t\treturn;\n\t\t}\n\t\tif (typeof obj === 'object') {\n\t\t\tthis.encodeMap(obj as Record<any, any>);\n\t\t\treturn;\n\t\t}\n\n\t\tthrow new Error('MsgPackEncoder: unsupported object of type ' + Object.prototype.toString.apply(obj));\n\t}\n\n\tprivate encodeNull(): void {\n\t\tthis.writeUint8(0xC0);\n\t}\n\n\tprivate encodeBoolean(b: boolean): void {\n\t\tthis.writeUint8(b === false ? 0xC2 : 0xC3);\n\t}\n\n\tprivate encodeNumber(n: number): void {\n\t\tif (Number.isSafeInteger(n)) {\n\t\t\tif (n >= 0) {\n\t\t\t\tif (n < 0x80) {\n\t\t\t\t\tthis.writeUint8(n);\n\t\t\t\t}\n\t\t\t\telse if (n < 0x100) {\n\t\t\t\t\tthis.writeUint8(0xCC);\n\t\t\t\t\tthis.writeUint8(n);\n\t\t\t\t}\n\t\t\t\telse if (n < 0x10000) {\n\t\t\t\t\tthis.writeUint8(0xCD);\n\t\t\t\t\tthis.writeUint16(n);\n\t\t\t\t}\n\t\t\t\telse if (n < 0x100000000) {\n\t\t\t\t\tthis.writeUint8(0xCE);\n\t\t\t\t\tthis.writeUint32(n);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.writeUint8(0xCF);\n\t\t\t\t\tthis.writeUint64(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (n >= -0x20) {\n\t\t\t\t\tthis.writeUint8(0xE0 | (n + 0x20));\n\t\t\t\t}\n\t\t\t\telse if (n >= -0x80) {\n\t\t\t\t\tthis.writeUint8(0xD0);\n\t\t\t\t\tthis.writeInt8(n);\n\t\t\t\t}\n\t\t\t\telse if (n >= -0x8000) {\n\t\t\t\t\tthis.writeUint8(0xD1);\n\t\t\t\t\tthis.writeInt16(n);\n\t\t\t\t}\n\t\t\t\telse if (n >= -0x80000000) {\n\t\t\t\t\tthis.writeUint8(0xD2);\n\t\t\t\t\tthis.writeInt32(n);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.writeUint8(0xD3);\n\t\t\t\t\tthis.writeInt64(n);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this.useFloat) {\n\t\t\t\tthis.writeUint8(0xCA);\n\t\t\t\tthis.writeFloat(n);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.writeUint8(0xCB);\n\t\t\t\tthis.writeDouble(n);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate encodeString(s: string): void {\n\t\tconst strLen = s.length;\n\n\t\tlet buf = new Uint8Array(s.length * 2);\n\t\tlet ofs = 0;\n\n\t\tlet pos = 0;\n\t\twhile (pos < strLen) {\n\t\t\tif (buf.byteLength - ofs < 4) {\n\t\t\t\tconst newBuf = new Uint8Array(buf.byteLength + 2048);\n\t\t\t\tnewBuf.set(buf);\n\t\t\t\tbuf = newBuf;\n\t\t\t}\n\n\t\t\tlet ch = s.charCodeAt(pos);\n\t\t\tpos += 1;\n\n\t\t\tif ((ch & 0xFFFFFF80) === 0) {\n\t\t\t\tbuf[ofs] = ch;\n\t\t\t\tofs += 1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse if ((ch & 0xFFFFF800) === 0) {\n\t\t\t\t// 2-bytes\n\t\t\t\tbuf[ofs] = ((ch >> 6) & 0x1f) | 0xc0;\n\t\t\t\tofs += 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (ch >= 0xD800 && ch <= 0xDBFF && pos < strLen) {\n\t\t\t\t\tconst ch2 = s.charCodeAt(pos);\n\t\t\t\t\tif ((ch2 & 0xFC00) === 0xDC00) {\n\t\t\t\t\t\tpos += 1;\n\t\t\t\t\t\tch = ((ch & 0x3FF) << 10) + (ch2 & 0x3FF) + 0x10000;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ((ch & 0xffff0000) === 0) {\n\t\t\t\t\tbuf[ofs] = ((ch >> 12) & 0x0F) | 0xE0;\n\t\t\t\t\tbuf[ofs + 1] = ((ch >> 6) & 0x3F) | 0x80;\n\t\t\t\t\tofs += 2;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbuf[ofs] = ((ch >> 18) & 0x07) | 0xF0;\n\t\t\t\t\tbuf[ofs + 1] = ((ch >> 12) & 0x3F) | 0x80;\n\t\t\t\t\tbuf[ofs + 2] = ((ch >> 6) & 0x3F) | 0x80;\n\t\t\t\t\tofs += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbuf[ofs] = (ch & 0x3F) | 0x80;\n\t\t\tofs += 1;\n\t\t}\n\n\t\tif (ofs < 32) {\n\t\t\tthis.writeUint8(0xA0 + ofs);\n\t\t}\n\t\telse if (ofs < 0x100) {\n\t\t\tthis.writeUint8(0xD9);\n\t\t\tthis.writeUint8(ofs);\n\t\t}\n\t\telse if (ofs < 0x10000) {\n\t\t\tthis.writeUint8(0xDA);\n\t\t\tthis.writeUint16(ofs);\n\t\t}\n\t\telse if (ofs < 0x100000000) {\n\t\t\tthis.writeUint8(0xDB);\n\t\t\tthis.writeUint32(ofs);\n\t\t}\n\t\telse {\n\t\t\tthrow new Error('MsgPackEncoder: string too long');\n\t\t}\n\n\t\tthis.writeBuffer(new Uint8Array(buf.buffer, 0, ofs));\n\t}\n\n\tencodeBinary(obj: ArrayBufferView): void {\n\t\tconst size = obj.byteLength;\n\t\tif (size < 0x100) {\n\t\t\tthis.writeUint8(0xC4);\n\t\t\tthis.writeUint8(size);\n\t\t}\n\t\telse if (size < 0x10000) {\n\t\t\tthis.writeUint8(0xC5);\n\t\t\tthis.writeUint16(size);\n\t\t}\n\t\telse if (size < 0x100000000) {\n\t\t\tthis.writeUint8(0xC6);\n\t\t\tthis.writeUint32(size);\n\t\t}\n\t\telse {\n\t\t\tthrow new Error('MsgPackEncoder: binary object is too large');\n\t\t}\n\n\t\tthis.writeBuffer(new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));\n\t}\n\n\tencodeArray(obj: Array<unknown>): void {\n\t\tconst size = obj.length;\n\t\tif (size < 16) {\n\t\t\tthis.writeUint8(0x90 + size);\n\t\t}\n\t\telse if (size < 0x10000) {\n\t\t\tthis.writeUint8(0xDC);\n\t\t\tthis.writeUint16(size);\n\t\t}\n\t\telse if (size < 0x100000000) {\n\t\t\tthis.writeUint8(0xDD);\n\t\t\tthis.writeUint32(size);\n\t\t}\n\t\telse {\n\t\t\tthrow new Error('MsgPackEncoder: array object is too large');\n\t\t}\n\n\t\tfor (const v of obj) {\n\t\t\tthis.parse(v);\n\t\t}\n\t}\n\n\tencodeMap(obj: Record<any, any>): void {\n\t\tconst keys = Object.keys(obj);\n\t\tif (this.sortKeys) {\n\t\t\tkeys.sort();\n\t\t}\n\n\t\tlet keysCount = 0;\n\t\tfor (const key of keys) {\n\t\t\tif (obj[key] !== undefined) {\n\t\t\t\tkeysCount += 1;\n\t\t\t}\n\t\t}\n\n\t\tif (keysCount < 16) {\n\t\t\tthis.writeUint8(0x80 + keysCount);\n\t\t}\n\t\telse if (keysCount < 0x10000) {\n\t\t\tthis.writeUint8(0xDE);\n\t\t\tthis.writeUint16(keysCount);\n\t\t}\n\t\telse if (keysCount < 0x100000000) {\n\t\t\tthis.writeUint8(0xDF);\n\t\t\tthis.writeUint32(keysCount);\n\t\t}\n\t\telse {\n\t\t\tthrow new Error('MsgPackEncoder: object has a large number of keys');\n\t\t}\n\n\t\tfor (const key of keys) {\n\t\t\tif (obj[key] !== undefined) {\n\t\t\t\tthis.parse(key);\n\t\t\t\tthis.parse(obj[key]);\n\t\t\t}\n\t\t}\n\t}\n\n\tencodeExtension(type: number, data: Uint8Array): void {\n\t\tconst size = data.length;\n\t\tif (size === 1) {\n\t\t\tthis.writeUint8(0xD4);\n\t\t}\n\t\telse if (size === 2) {\n\t\t\tthis.writeUint8(0xD5);\n\t\t}\n\t\telse if (size === 4) {\n\t\t\tthis.writeUint8(0xD6);\n\t\t}\n\t\telse if (size === 8) {\n\t\t\tthis.writeUint8(0xD7);\n\t\t}\n\t\telse if (size === 16) {\n\t\t\tthis.writeUint8(0xD8);\n\t\t}\n\t\telse if (size < 0x100) {\n\t\t\tthis.writeUint8(0xC7);\n\t\t\tthis.writeUint8(size);\n\t\t}\n\t\telse if (size < 0x10000) {\n\t\t\tthis.writeUint8(0xC8);\n\t\t\tthis.writeUint16(size);\n\t\t}\n\t\telse if (size < 0x100000000) {\n\t\t\tthis.writeUint8(0xC9);\n\t\t\tthis.writeUint32(size);\n\t\t}\n\t\telse {\n\t\t\tthrow new Error('MsgPackEncoder: extension object is too large');\n\t\t}\n\t\tthis.writeInt8(type);\n\t\tthis.writeBuffer(data);\n\t}\n\n\tprivate writeUint8(n: number): void {\n\t\tthis.ensureSpace(1);\n\t\tthis.bufferView.setUint8(this.bufferLen, n);\n\t\tthis.bufferLen += 1;\n\t}\n\n\tprivate writeInt8(n: number): void {\n\t\tthis.ensureSpace(1);\n\t\tthis.bufferView.setInt8(this.bufferLen, n);\n\t\tthis.bufferLen += 1;\n\t}\n\n\tprivate writeUint16(n: number): void {\n\t\tthis.ensureSpace(2);\n\t\tthis.bufferView.setUint16(this.bufferLen, n);\n\t\tthis.bufferLen += 2;\n\t}\n\n\tprivate writeInt16(n: number): void {\n\t\tthis.ensureSpace(2);\n\t\tthis.bufferView.setInt16(this.bufferLen, n);\n\t\tthis.bufferLen += 2;\n\t}\n\n\tprivate writeUint32(n: number): void {\n\t\tthis.ensureSpace(4);\n\t\tthis.bufferView.setUint32(this.bufferLen, n);\n\t\tthis.bufferLen += 4;\n\t}\n\n\tprivate writeInt32(n: number): void {\n\t\tthis.ensureSpace(4);\n\t\tthis.bufferView.setInt32(this.bufferLen, n);\n\t\tthis.bufferLen += 4;\n\t}\n\n\tprivate writeUint64(n: number): void {\n\t\tthis.ensureSpace(8);\n\t\tconst hi = Math.floor(n / 0x1_0000_0000);\n\t\tthis.bufferView.setUint32(this.bufferLen, hi);\n\t\tthis.bufferView.setUint32(this.bufferLen + 4, n); //high bits will be truncated by DataView\n\t\tthis.bufferLen += 8;\n\t}\n\n\tprivate writeInt64(n: number) {\n\t\tthis.ensureSpace(8);\n\t\tconst hi = Math.floor(n / 0x1_0000_0000);\n\t\tthis.bufferView.setUint32(this.bufferLen, hi);\n\t\tthis.bufferView.setUint32(this.bufferLen + 4, n); //high bits will be truncated by DataView\n\t\tthis.bufferLen += 8;\n\t}\n\n\tprivate writeFloat(n: number) {\n\t\tthis.ensureSpace(4);\n\t\tthis.bufferView.setFloat32(this.bufferLen, n);\n\t\tthis.bufferLen += 4;\n\t}\n\n\tprivate writeDouble(n: number) {\n\t\tthis.ensureSpace(8);\n\t\tthis.bufferView.setFloat64(this.bufferLen, n);\n\t\tthis.bufferLen += 8;\n\t}\n\n\tprivate writeBuffer(b: Uint8Array) {\n\t\tthis.ensureSpace(b.byteLength);\n\t\tthis.buffer.set(b, this.bufferLen);\n\t\tthis.bufferLen += b.byteLength;\n\t}\n\n\tprivate ensureSpace(size: number) {\n\t\tif (this.bufferView.byteLength - this.bufferLen < size) {\n\t\t\tconst newBufferSize = (this.bufferView.byteLength + size + 2047) & (~2047);\n\t\t\tconst newBufferView = new DataView(new ArrayBuffer(newBufferSize));\n\t\t\tconst newBuffer = new Uint8Array(newBufferView.buffer);\n\n\t\t\tnewBuffer.set(this.buffer);\n\n\t\t\tthis.buffer = newBuffer;\n\t\t\tthis.bufferView = newBufferView;\n\t\t}\n\t}\n};\n","import { Buffer } from 'node:buffer';\nimport { MsgPackExtension } from './interface';\n\n// -----------------------------------------------------------------------------\n\nexport class MsgPackBigIntExtension implements MsgPackExtension<bigint> {\n\tconstructor(private extType: number) {\n\t};\n\n\tpublic get type(): number {\n\t\treturn this.extType;\n\t}\n\n\tpublic is(obj: any): boolean {\n\t\treturn typeof obj === 'bigint';\n\t}\n\n\tpublic encode(obj: bigint): Uint8Array {\n\t\treturn new Uint8Array(Buffer.from(obj.toString(), 'ascii'));\n\t}\n\n\tpublic decode(data: Uint8Array): bigint {\n\t\treturn BigInt(Buffer.from(data).toString('ascii'));\n\t}\n};\n","export type { MsgPackExtension } from './interface';\r\nexport { MsgPackBigIntExtension } from './bigint';\r\nexport { MsgPackDateExtension } from './timestamp';\r\n","import { Buffer } from 'node:buffer';\nimport { MsgPackExtension } from './interface';\n\n// -----------------------------------------------------------------------------\n\nexport class MsgPackDateExtension implements MsgPackExtension<Date> {\n\tget type(): number {\n\t\treturn -1;\n\t}\n\n\tpublic is(obj: any): boolean {\n\t\treturn obj instanceof Date;\n\t}\n\n\tpublic encode(obj: Date): Uint8Array {\n\t\tconst ms = obj.getTime();\n\t\tconst secs = Math.floor(ms / 1000);\n\t\tconst nanosecs = (ms % 1000) * 1000000;\n\n\t\t// timestamp 96 stores the number of seconds and nanoseconds that have elapsed since 1970-01-01 00:00:00 UTC\n\t\t// in 64-bit signed integer and 32-bit unsigned integer:\n\t\t// +--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+\n\t\t// |  0xc7  |   12   |   -1   |nanoseconds in 32-bit unsigned int |                   seconds in 64-bit signed int                        |\n\t\t// +--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+\n\t\tconst buffer = Buffer.alloc(12);\n\t\tbuffer.writeUInt32BE(nanosecs, 0);\n\t\tbuffer.writeUInt32BE(Math.floor(secs / 4294967296), 4);\n\t\tbuffer.writeUInt32BE(secs & 0xffffffff, 8);\n\n\t\t// Done\n\t\treturn new Uint8Array(buffer);\n\t}\n\n\tpublic decode(data: Uint8Array): Date {\n\t\tconst buffer = Buffer.from(data);\n\t\tlet secs: number;\n\t\tlet secsHi: number;\n\t\tlet nanosecs: number;\n\n\t\tswitch (data.length) {\n\t\t\tcase 4:\n\t\t\t\t// timestamp 32 stores the number of seconds that have elapsed since 1970-01-01 00:00:00 UTC\n\t\t\t\t// in an 32-bit unsigned integer:\n\t\t\t\t// +--------+--------+--------+--------+--------+--------+\n\t\t\t\t// |  0xd6  |   -1   |   seconds in 32-bit unsigned int  |\n\t\t\t\t// +--------+--------+--------+--------+--------+--------+\n\t\t\t\tsecs = buffer.readUInt32BE(0);\n\t\t\t\treturn new Date(secs * 1000);\n\n\t\t\tcase 8:\n\t\t\t\t// timestamp 64 stores the number of seconds and nanoseconds that have elapsed since 1970-01-01 00:00:00 UTC\n\t\t\t\t// in 32-bit unsigned integers:\n\t\t\t\t// +--------+--------+--------+--------+--------+------|-+--------+--------+--------+--------+\n\t\t\t\t// |  0xd7  |   -1   | nanosec. in 30-bit unsigned int |   seconds in 34-bit unsigned int    |\n\t\t\t\t// +--------+--------+--------+--------+--------+------^-+--------+--------+--------+--------+\n\t\t\t\tnanosecs = buffer.readUInt32BE(0);\n\t\t\t\tsecs = buffer.readUInt32BE(4);\n\t\t\t\tsecsHi = nanosecs % 4;\n\t\t\t\tnanosecs = Math.floor(nanosecs / 4);\n\t\t\t\treturn new Date((secs + (secsHi * 4294967296)) * 1000 + Math.floor(nanosecs / 1000000));\n\n\t\t\tcase 12:\n\t\t\t\t// timestamp 96 stores the number of seconds and nanoseconds that have elapsed since 1970-01-01 00:00:00 UTC\n\t\t\t\t// in 64-bit signed integer and 32-bit unsigned integer:\n\t\t\t\t// +--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+\n\t\t\t\t// |  0xc7  |   12   |   -1   |nanoseconds in 32-bit unsigned int |                   seconds in 64-bit signed int                        |\n\t\t\t\t// +--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+\n\t\t\t\tnanosecs = buffer.readUInt32BE(0);\n\t\t\t\tsecsHi = buffer.readUInt32BE(4);\n\t\t\t\tsecs = buffer.readUInt32BE(8);\n\t\t\t\treturn new Date((secs + (secsHi * 4294967296)) * 1000 + Math.floor(nanosecs / 1000000));\n\t\t}\n\n\t\tthrow new Error('MsgPackDateExtension: unsupported format');\n\t}\n};\n","export * from './codec/encoder';\nexport * from './codec/decoder';\nexport * from './ext';\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(156);\n"],"names":["root","factory","exports","module","define","amd","this","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","MsgPackDecoder","decode","opts","assign","extensions","MsgPackBigIntExtension","MsgPackDateExtension","allowMultiple","multipleCanThrowError","process","result","o","err","ofs","tokenMap","constantNull","bind","param","invalidOpcode","constantFalse","constantTrue","readBinary","readUint16","readUint32","readExtension","readFloat","readDouble","readUint64","readInt16","readInt32","readInt64","readString","readArray","readMap","opcode","checkAvailable","extension","invalidUtf8","savedOffset","savedParam","ch","idx","count","MsgPackEncoder","encode","sortKeys","useFloat","bufferView","DataView","bufferLen","parse","is","encodeExtension","encodeArray","encodeBinary","encodeMap","encodeString","encodeNumber","encodeBoolean","encodeNull","isSafeInteger","writeUint16","writeUint32","writeUint64","writeInt16","writeInt32","writeInt64","ch2","writeBuffer","v","keys","sort","keysCount","key","ensureSpace","setUint8","setInt8","setUint16","setInt16","setUint32","setInt32","setFloat32","setFloat64","newBufferSize","newBufferView","newBuffer","extType","Date","ms","getTime","secs","nanosecs","secsHi","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}